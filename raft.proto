syntax = "proto3";

package raft;

message LogEntry {
    int32 term = 1;
    bytes command = 2;  // Better to use bytes for general commands
    int64 timestamp = 3;
    int64 index = 4;     // *REQUIRED* Add index to LogEntry
}

message RequestVoteRequest {
    int32 term = 1;
    int32 candidateId = 2;
    int64 lastLogIndex = 3;
    int64 lastLogTerm = 4;
}

message RequestVoteResponse {
    bool voteGranted = 1;
    int32 term = 2;
}

message AppendEntriesRequest {
    int32 term = 1;
    int32 leaderId = 2;
    int64 prevLogIndex = 3;
    int64 prevLogTerm = 4;
    repeated LogEntry entries = 5;
    int64 leaderCommit = 6;
}

message AppendEntriesResponse {
    int32 term = 1;
    bool success = 2;
    int64 matchIndex = 3;
}

message ClientRequest { // For client interaction
    bytes command = 1;
    string db_name = 2;  // Add db_name to ClientRequest
}

message ClientResponse {
    bool success = 1;
    string response = 2;
    string leader_hint = 3;  // Add leader hint
}

// Status request/response (can be expanded if needed)
message StatusRequest {
    int32 node_id = 1;
}

message StatusResponse {
    string state = 1;
    int32 current_term = 2;
    int64 last_log_index = 3; // more useful than a count
    int32 log_count = 4;  // Add log_count field
    bool is_leader = 5;
    repeated string peers = 6; // return known peers
}

service RaftService {
    rpc Status(StatusRequest) returns (StatusResponse);
    rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse);
    rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
    rpc ClientCommand(ClientRequest) returns (ClientResponse);  // Corrected RPC name
}